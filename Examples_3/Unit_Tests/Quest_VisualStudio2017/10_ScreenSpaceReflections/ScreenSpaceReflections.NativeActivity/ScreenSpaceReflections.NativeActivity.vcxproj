<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="12.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|ARM64">
      <Configuration>Debug</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|ARM64">
      <Configuration>Release</Configuration>
      <Platform>ARM64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{3743292B-3776-4A32-A305-8AE1EAB3D787}</ProjectGuid>
    <Keyword>Android</Keyword>
    <RootNamespace>ScreenSpaceReflections</RootNamespace>
    <DefaultLanguage>en-US</DefaultLanguage>
    <MinimumVisualStudioVersion>14.0</MinimumVisualStudioVersion>
    <ApplicationType>Android</ApplicationType>
    <ApplicationTypeRevision>3.0</ApplicationTypeRevision>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-28</AndroidAPILevel>
    <UseOfStl>c++_shared</UseOfStl>
    <ThumbMode>Disabled</ThumbMode>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>Clang_5_0</PlatformToolset>
    <AndroidAPILevel>android-28</AndroidAPILevel>
    <UseOfStl>c++_shared</UseOfStl>
    <ThumbMode>Disabled</ThumbMode>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="Shared">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <Import Project="..\..\ARM64Quest.props" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <Import Project="..\..\ARM64Quest.props" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ExecutablePath>$(VS_NdkRoot)\toolchains\llvm\prebuilt\windows-x86_64\bin;$(PATH);</ExecutablePath>
    <IncludePath>$(CustomSysroot)\usr\include;$(CustomSysroot)\usr\include\$(TRIPLE);$(VS_Ndkroot)\sources\android\native_app_glue</IncludePath>
    <UseMultiToolTask>true</UseMultiToolTask>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\$(ProjectName)\</OutDir>
    <IntDir>$(SolutionDir)\$(Platform)\$(Configuration)\Intermediate\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <UseMultiToolTask>true</UseMultiToolTask>
    <OutDir>$(SolutionDir)$(Platform)\$(Configuration)\$(ProjectName)\</OutDir>
    <ExecutablePath>$(VS_NdkRoot)\toolchains\llvm\prebuilt\windows-x86_64\bin;$(PATH);</ExecutablePath>
    <IncludePath>$(CustomSysroot)\usr\include;$(CustomSysroot)\usr\include\$(TRIPLE);$(VS_Ndkroot)\sources\android\native_app_glue</IncludePath>
    <IntDir>$(SolutionDir)\$(Platform)\$(Configuration)\Intermediate\$(ProjectName)\</IntDir>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <CompileAs>CompileAsCpp</CompileAs>
      <PreprocessorDefinitions>QUEST_VR;VK_USE_PLATFORM_ANDROID_KHR;ANDROID_ARM_NEON;ANDROID;VULKAN;_DEBUG;USE_MEMORY_TRACKING;</PreprocessorDefinitions>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <EnableNeonCodegen>false</EnableNeonCodegen>
      <AdditionalOptions>-Wno-unused-variable -Wno-c++14-extensions %(AdditionalOptions)</AdditionalOptions>
    </ClCompile>
    <Link>
      <LibraryDependencies>$(AndroidNativeLibs);Renderer;OS;SpirvTools;gainputstatic;shaderc;vrapi;VkLayer_khronos_validation</LibraryDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\..\Common_3\ThirdParty\OpenSource\Vulkan-ValidationLayer-1.2.182.0\$(PlatformShortName);$(SolutionDir)..\..\..\Common_3\ThirdParty\OpenSource\ovr_sdk_mobile_1.46.0\VrApi\Libs\Android\$(PlatformShortName)\Debug;$(SolutionDir)..\..\..\..\Common_3\ThirdParty\OpenSource\Libraries\Android-$(Platform);$(SolutionDir)$(Platform)\$(Configuration)\;$(VS_Ndkroot)\sources\third_party\shaderc\libs\$(UseOfStl)\$(TargetArchAbi);$(LibraryPath);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <IgnoreSpecificDefaultLibraries>%(IgnoreSpecificDefaultLibraries)</IgnoreSpecificDefaultLibraries>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\UnitTestResources\Textures $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Textures circlepad.ktx
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\UnitTestResources\Textures $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Textures LA_Helipad.ktx
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\UnitTestResources\Fonts\TitilliumText $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Fonts\TitilliumText\
$(systemroot)\System32\xcopy "$(SolutionDir)$(Platform)\$(Configuration)\OS\Shaders\*.*" "$(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Shaders\" /s /y /d
$(systemroot)\System32\Robocopy /S $(ProjectDir)..\..\..\..\..\Art\Sponza\Textures\ $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Textures\ *.ktx
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Art\Sponza\Meshes $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Meshes\
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\src\10_ScreenSpaceReflections\Scripts\ $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Scripts\ *.lua
$(systemroot)\System32\xcopy $(VS_NdkRoot)\sources\third_party\vulkan\src\build-android\jniLibs\$(TargetArchAbi)\*.so $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\libs\$(TargetArchAbi)\ /s /y /d
$(systemroot)\System32\xcopy  $(SolutionDir)..\..\..\Common_3\ThirdParty\OpenSource\ovr_sdk_mobile_1.46.0\VrApi\Libs\Android\$(PlatformShortName)\Debug\*.so $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\libs\$(TargetArchAbi)\ /s /y /d
$(systemroot)\System32\xcopy  $(SolutionDir)..\..\..\Common_3\ThirdParty\OpenSource\Vulkan-ValidationLayer-1.2.182.0\$(PlatformShortName)\*.so $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\libs\$(TargetArchAbi)\ /s /y /d
if ERRORLEVEL 2 goto HandleError
exit 0
:HandleError
exit %ERRORLEVEL%
      </Command>
    </PostBuildEvent>
    <FSLShader>
      <Language>VULKAN</Language>
      <OutDir>$(SolutionDir)$(Platform)/$(Configuration)/$(RootNameSpace)/assets/Shaders</OutDir>
      <BinaryOutDir>$(SolutionDir)$(Platform)/$(Configuration)/$(RootNameSpace)/assets/Shaders/Binary</BinaryOutDir>
    </FSLShader>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|ARM64'">
    <ClCompile>
      <PrecompiledHeader>NotUsing</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <CompileAs>CompileAsCpp</CompileAs>
      <CppLanguageStandard>c++11</CppLanguageStandard>
      <PreprocessorDefinitions>QUEST_VR;VK_USE_PLATFORM_ANDROID_KHR;ANDROID_ARM_NEON;ANDROID;VULKAN;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalOptions>-Wno-c++14-extensions %(AdditionalOptions)</AdditionalOptions>
      <EnableNeonCodegen>false</EnableNeonCodegen>
    </ClCompile>
    <Link>
      <LibraryDependencies>$(AndroidNativeLibs);Renderer;OS;SpirvTools;gainputstatic;shaderc;vrapi</LibraryDependencies>
      <AdditionalLibraryDirectories>$(SolutionDir)..\..\..\Common_3\ThirdParty\OpenSource\ovr_sdk_mobile_1.46.0\VrApi\Libs\Android\$(PlatformShortName)\Release;$(SolutionDir)..\..\..\..\Common_3\ThirdParty\OpenSource\Libraries\Android-$(Platform);$(SolutionDir)$(Platform)\$(Configuration)\;$(VS_Ndkroot)\sources\third_party\shaderc\libs\$(UseOfStl)\$(TargetArchAbi);$(LibraryPath);%(AdditionalLibraryDirectories)</AdditionalLibraryDirectories>
      <AdditionalOptions>-lm -lc++_shared -lc++abi -llog -landroid %(AdditionalOptions)</AdditionalOptions>
    </Link>
    <PreBuildEvent>
      <Command>
      </Command>
    </PreBuildEvent>
    <PostBuildEvent>
      <Command>$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\UnitTestResources\Textures $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Textures circlepad.ktx
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\UnitTestResources\Textures $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Textures LA_Helipad.ktx
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\UnitTestResources\Fonts\TitilliumText $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Fonts\TitilliumText\
$(systemroot)\System32\xcopy "$(SolutionDir)$(Platform)\$(Configuration)\OS\Shaders\*.*" "$(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Shaders\" /s /y /d
$(systemroot)\System32\Robocopy /S $(ProjectDir)..\..\..\..\..\Art\Sponza\Textures\ $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Textures\ *.ktx
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Art\Sponza\Meshes $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Meshes\
$(systemroot)\System32\Robocopy $(ProjectDir)..\..\..\..\..\Examples_3\Unit_Tests\src\10_ScreenSpaceReflections\Scripts\ $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\assets\Scripts\ *.lua
$(systemroot)\System32\xcopy  $(SolutionDir)..\..\..\Common_3\ThirdParty\OpenSource\ovr_sdk_mobile_1.46.0\VrApi\Libs\Android\$(PlatformShortName)\Release\*.so $(SolutionDir)$(Platform)\$(Configuration)\$(RootNameSpace)\libs\$(TargetArchAbi)\ /s /y /d
if ERRORLEVEL 2 goto HandleError
exit 0
:HandleError
exit %ERRORLEVEL%</Command>
    </PostBuildEvent>
    <FSLShader>
      <Language>VULKAN</Language>
      <OutDir>$(SolutionDir)$(Platform)/$(Configuration)/$(RootNameSpace)/assets/Shaders</OutDir>
      <BinaryOutDir>$(SolutionDir)$(Platform)/$(Configuration)/$(RootNameSpace)/assets/Shaders/Binary</BinaryOutDir>
    </FSLShader>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="..\..\..\..\..\..\Common_3\OS\Android\android_native_app_glue.h" />
    <ClInclude Include="..\..\..\..\..\..\Examples_3\Unit_Tests\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_Common.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="..\..\..\..\..\..\Examples_3\Unit_Tests\src\10_ScreenSpaceReflections\10_ScreenSpaceReflections.cpp" />
    <ClCompile Include="..\..\..\..\..\..\Common_3\OS\Android\android_native_app_glue.c" />
  </ItemGroup>
  <ItemGroup>
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\BRDFIntegration.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\computeIrradianceMap.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\computeSpecularMap.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\copyDepth.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\DepthDownsample.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\fillGbuffers.frag.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\fillGbuffers.vert.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\generateMips.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\panoToCube.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\PPR_Holepatching.frag.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\PPR_Holepatching.vert.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\PPR_Projection.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\PPR_Reflection.frag.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\PPR_Reflection.vert.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\renderSceneBRDF.frag.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\renderSceneBRDF.vert.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\skybox.frag.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\skybox.vert.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_ClassifyTiles.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_Intersect.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_PrepareIndirectArgs.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_ResolveEaw.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_ResolveEawStride.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_ResolveSpatial.comp.fsl" />
    <FSLShader Include="..\..\..\src\10_ScreenSpaceReflections\Shaders\FSL\Quest\SSSR_ResolveTemporal.comp.fsl" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="..\..\..\..\..\..\Common_3\Tools\ForgeShadingLanguage\VS\fsl.targets" />
  </ImportGroup>
</Project>